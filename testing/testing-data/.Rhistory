grid.arrange(grobs=p.sorted)
students_helped_dist
experts.data <- cbind(students.helped.dist, experts.names)
experts.data <- cbind(students_helped_dist, experts.names)
experts.names <- c("expert 1", "expert 2", "expert 3", "expert 4", "expert 5", "expert 6", "expert 7","expert 8","expert 9", "expert 10", "expert 11", "expert 12", "expert 13", "expert 14", "expert 15", "expert 16", "expert 17", "expert 18", "expert 19", "expert 20")
experts.data <- cbind(students_helped_dist, experts.names)
View(experts.data)
experts.data <- data.frame(cbind(students_helped_dist, experts.names))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="red", alpha=0.8, dotsize=0.5)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + xlim(0,1)
library(ggplot2)
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="red", alpha=0.8, dotsize=0.5)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + xlim(0,1)
ggplot() + geom_dotplot(data = experts.data, aes(x = experts.names, y = students_helped_dist), binaxis='y', fill="red", alpha=0.8, dotsize=0.5)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + xlim(0,1)
ggplot() + geom_dotplot(data = experts.data, aes(x = experts.names, y = students_helped_dist), binaxis='y', fill="red", alpha=0.8, dotsize=0.5)
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="red", alpha=0.8, dotsize=0.5)
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="red", alpha=0.8, dotsize=0.5)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
experts.data <- data.frame(cbind(as.numeric(as.character(students_helped_dist)), experts.names))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="red", alpha=0.8, dotsize=0.5)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="red", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + xlim(0,1)
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="red", alpha=0.8, dotsize=0.5)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + xlim(0,1)
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="red", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + xlim(0,1)
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="red", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="red", alpha=0.8, dotsize=0.5)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = reorder(experts.names,experts.names)), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(element_blank()), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + scale_x_continuous(breaks = NULL)
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) #
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) #
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"), panel.grid.major.x = element_line(color = "#f3f3f3"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) #
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) #
?geom_area
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(students_helped_dist), ymax=max(students_helped_dist)))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(xmin=min(students_helped_dist), xmax=max(students_helped_dist)))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(students_helped_dist), ymax=max(students_helped_dist), x = students_helped_dist))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(y=experts.names, x = students_helped_dist))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin="expert_1", ymax="expert_20", x = students_helped_dist))
students_helped_dist.upper
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(as.numeric(experts.names)), ymax=max(as.numeric(experts.names)), x = students_helped_dist))
as.numeric(experts.names)
as.numeric(as.factor(experts.names))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist))
ggplot() + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist)) + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot(data=experts.data) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist)) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist)) + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist)) + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
as.numeric(as.factor(experts.names))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist))
ggplot(experts.data) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot(experts.data) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist)) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot(experts.data) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = as.numeric(students_helped_dist))) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot(experts.data) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = as.numeric(students_helped_dist))) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot(experts.data) + geom_ribbon(aes(ymin=min(experts.names), ymax=max(experts.names), x = as.numeric(students_helped_dist))) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot(experts.data) + geom_ribbon(aes(ymin=min(as.numeric(experts.names)), ymax=max(as.numeric(experts.names)), x = as.numeric(students_helped_dist))) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
as.numeric(experts.names)
ggplot(experts.data) + geom_ribbon(aes(ymin=min(experts.names), ymax=max(experts.names), x = as.numeric(students_helped_dist))) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot(experts.data) + geom_ribbon(aes(ymin=min(experts.names), ymax=max(experts.names), x = as.numeric(students_helped_dist))) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(data = experts.data, aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist))
ggplot()+ geom_ribbon(data = experts.data, aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist))
+ geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot()+ geom_ribbon(data = experts.data, aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist)) + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist), color="red")
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist), fill="blue", alpha=0.5)
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist), fill="#cccccc", alpha=0.1)
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = students_helped_dist), fill="#cccccc", alpha=0.3)
?ptile
experts.quantiles <- quantile((experts.data$students_helped_dist), c(0.25, 0.75))
experts.quantiles
students_helped_dist
?quantile
experts.data$students_helped_dist
experts.data
experts.data <- data.frame(students_helped_dist = as.numeric(as.character(students_helped_dist), experts.names = experts.names))
experts.data <- data.frame(students_helped_dist = as.numeric(as.character(students_helped_dist)), experts.names = experts.names)
experts.quantiles <- quantile((experts.data$students_helped_dist), c(0.25, 0.75))
experts.quantiles
experts.25th <- experts.quantiles[1]
experts.25th
experts.75th <- experts.quantiles[2]
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4)
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot() + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
experts.data <- data.frame(students_helped_dist = as.numeric(as.character(students_helped_dist)), experts.names = experts.names)
ggplot() + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot(data = experts.data) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot()  + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot() + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot(data = experts.data) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot(data = experts.data) + geom_ribbon(aes(ymin=min(as.numeric(experts.names)), ymax=max(as.numeric(experts.names)), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
min(as.numeric(experts.data$experts.names))
ggplot(experts.data) + geom_ribbon(aes(ymin=min(as.numeric(experts.names)), ymax=max(as.numeric(experts.names)), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot(experts.data) + geom_ribbon(aes(ymin=min(as.numeric(experts.names)), ymax=max(as.numeric(experts.names)), xmin = experts.25th, xmax=experts.75th), fill="#cccccc", alpha=0.4) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot(data = experts.data) + geom_ribbon(aes(ymin=min(as.numeric(experts.names)), ymax=max(as.numeric(experts.names)), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot(data = experts.data) + geom_ribbon(aes(ymin=min(as.numeric(experts.names)), ymax=max(as.numeric(experts.names)), x = students_helped_dist), fill="#cccccc", alpha=0.4) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot(data = experts.data) + geom_ribbon(aes(ymin=min(as.numeric(experts.names)), ymax=max(as.numeric(experts.names)), x = as.numeric(students_helped_dist)), fill="#cccccc", alpha=0.4) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot(data = experts.data) + geom_ribbon(aes(ymin=min(experts.names), ymax=max(experts.names), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot(data = experts.data) + geom_ribbon(aes(ymin=min(as.numeric(as.character(experts.names))), ymax=max(as.numeric(as.character(experts.names))), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + geom_dotplot(aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4) + ggtitle("Agreement among experts on parameter value:\n(Middle 50% shaded in gray)")
ggplot(experts.data) + geom_ribbon(aes(ymin=min(as.numeric(as.factor(experts.names))), ymax=max(as.numeric(as.factor(experts.names))), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4)
ggplot(experts.data) + geom_ribbon(aes(ymin=experts.names, ymax=experts.names, x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4)
ggplot(experts.data) + geom_ribbon(aes(ymin=min(experts.names), ymax=min(experts.names), x = c(experts.25th, experts.75th)), fill="#cccccc", alpha=0.4)
ggplot(experts.data) + geom_ribbon(aes(xmin=experts.25th, xmax=experts.75th, y = students_helped_dist, fill="#cccccc", alpha=0.4))
ggplot(experts.data) + geom_ribbon(aes(ymin=experts.25th, ymax=experts.75th, x = students_helped_dist, fill="#cccccc", alpha=0.4))
ggplot() + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12)) + geom_ribbon(aes(ymin=experts.25th, ymax=experts.75th, x = students_helped_dist, fill="#cccccc", alpha=0.4))
ggplot() + geom_ribbon(aes(ymin=experts.25th, ymax=experts.75th, x = students_helped_dist, fill="#cccccc", alpha=0.4))
+ geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_ribbon(aes(ymin=experts.25th, ymax=experts.75th, x = students_helped_dist, fill="#cccccc", alpha=0.4)) + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
ggplot() + geom_ribbon(aes(xmin=experts.25th, xmax=experts.75th, y = students_helped_dist, fill="#cccccc", alpha=0.4)) + geom_dotplot(data = experts.data, aes(x = students_helped_dist, y = experts.names), binaxis='y', fill="#1997A8", alpha=0.8, dotsize=0.8)  + theme(panel.border = element_blank(), panel.grid.major.y = element_line(color = "#333333"),  panel.background = element_rect(fill = "transparent",colour = NA), plot.title = element_text(hjust = 0.5), axis.text.y = element_text(size=12))
rbinom(100,1,0.5)
matrix(rbinom(100,1,0.5), nrow=10, ncol=10)
matrix(rbinom(100,1,0.8), nrow=10, ncol=10)
matrix(rbinom(100,1,0.5), nrow=10, ncol=10)
matrix(rep(c(0,1,0,1,0,1,1,0,1,1),5), nrow=5)
matrix(rep(c(0,1,0,1,0,1,1,0,1,1),5), nrow=10)
rep(c(0,1,0,1,0,1,1,0,1,1),5)
matrix(rep(c(0,1,0,1,0,1,1,0,1,1),5), nrow=10, ncol=10)
n = 10000
a = rnorm(n, 1, 100)
mean(a)
a = rbeta(n, 1, 100)
mean(a)
b = rnorm(n, 200000,40000)
c = rnorm(n, 1000000, 250000)
d = a * c / b
d
plot(density(d))
mean(d)
median(d)
d = b/(c*a)
plot(density(d))
mean(d)
median(d)
plot(density(log(d)))
#Programmer: Sophie McGuinness
#Purpose: Intake codes from dedoose, fix true/false, set varnames and create parent codes, merge into rest of data
#Infile: Rawfile Gates_PSW_Data_Scan_DATE.csv
#Outfile: K12Scan_Clean
#Date Created: 5/22/2020
install.packages("dplyr")
library(lubridate)
library(tidyverse)
library(reshape2)
library(reshape)
library(stringr)
library(ggplot2)
library(dplyr)
############################
#Import data
############################
#Load first PS coding batch
PSBatch1 <- read.csv("~/Desktop/soph/Postsec_B1_test.csv")
#View(PSBatch1)
explore_vars <- c("Excerpt.Copy", "Codes.Applied.Combined", "ResponseId")
############################
#Clean data
############################
names(PSBatch1)[which(names(PSBatch1) == "Code..Success.Applied")] <- "Success_tag"
names(PSBatch1)[which(names(PSBatch1) == "Codes.Applied.Combined")] <- "Combined_Codes"
#Translate TF to 01
fix.tf <- function(incorrect.tf) {
real.tf <- ifelse(incorrect.tf == "True" | incorrect.tf == "TRUE", 1, 0)
return(real.tf)
}
codes <- names(PSBatch1)[grepl("Code..",names(PSBatch1))]
for (i in 1:length(codes)) {
PSBatch1[,codes[[i]]] <- fix.tf(PSBatch1[,codes[[i]]])
}
#####################################
#Tag successes within success ranges
#####################################
#Create Index and upper/lower bound vars
x <- PSBatch1 %>% separate(Excerpt.Range, c("Lower", "Upper"), sep = "-")
x$UpperN <- as.numeric(x$Upper)
x$LowerN <- as.numeric(x$Lower)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
#Load first PS coding batch
PSBatch1 <- read.csv("~/Desktop/soph/Postsec_B1_test.csv")
#View(PSBatch1)
explore_vars <- c("Excerpt.Copy", "Codes.Applied.Combined", "ResponseId")
############################
#Clean data
############################
names(PSBatch1)[which(names(PSBatch1) == "Code..Success.Applied")] <- "Success_tag"
names(PSBatch1)[which(names(PSBatch1) == "Codes.Applied.Combined")] <- "Combined_Codes"
#Translate TF to 01
fix.tf <- function(incorrect.tf) {
real.tf <- ifelse(incorrect.tf == "True" | incorrect.tf == "TRUE", 1, 0)
return(real.tf)
}
codes <- names(PSBatch1)[grepl("Code..",names(PSBatch1))]
for (i in 1:length(codes)) {
PSBatch1[,codes[[i]]] <- fix.tf(PSBatch1[,codes[[i]]])
}
#####################################
#Tag successes within success ranges
#####################################
#Create Index and upper/lower bound vars
x <- PSBatch1 %>% separate(Excerpt.Range, c("Lower", "Upper"), sep = "-")
x$UpperN <- as.numeric(x$Upper)
x$LowerN <- as.numeric(x$Lower)
library(tidyverse)
x <- PSBatch1 %>% separate(Excerpt.Range, c("Lower", "Upper"), sep = "-")
x$UpperN <- as.numeric(x$Upper)
x$LowerN <- as.numeric(x$Lower)
View(x)
unique_indices <- unique(x$Media.Title)
unique_indices
unique_indices[[1]]
index = unique_indices[[1]]
current_respondent <- x[x$Media.Title == unique_indices[index]]
current_respondent <- x[x$Media.Title == unique_indices[index],]
current_respondent
length(current_respondent)
PSBatch1$Codes_Combined
PSBatch1 <- read.csv("~/Desktop/soph/Postsec_B1_test.csv")
#View(PSBatch1)
explore_vars <- c("Excerpt.Copy", "Codes.Applied.Combined", "ResponseId")
############################
#Clean data
############################
names(PSBatch1)[which(names(PSBatch1) == "Code..Success.Applied")] <- "Success_tag"
names(PSBatch1)[which(names(PSBatch1) == "Codes.Applied.Combined")] <- "Combined_Codes"
#Translate TF to 01
fix.tf <- function(incorrect.tf) {
real.tf <- ifelse(incorrect.tf == "True" | incorrect.tf == "TRUE", 1, 0)
return(real.tf)
}
codes <- names(PSBatch1)[grepl("Code..",names(PSBatch1))]
for (i in 1:length(codes)) {
PSBatch1[,codes[[i]]] <- fix.tf(PSBatch1[,codes[[i]]])
}
#####################################
#Tag successes within success ranges
#####################################
#Create Index and upper/lower bound vars
x <- PSBatch1 %>% separate(Excerpt.Range, c("Lower", "Upper"), sep = "-")
x$UpperN <- as.numeric(x$Upper)
x$LowerN <- as.numeric(x$Lower)
library(lubridate)
library(tidyverse)
library(reshape2)
library(reshape)
library(stringr)
library(ggplot2)
library(dplyr)
library(tidyverse)
names(PSBatch1)[which(names(PSBatch1) == "Code..Success.Applied")] <- "Success_tag"
names(PSBatch1)[which(names(PSBatch1) == "Codes.Applied.Combined")] <- "Combined_Codes"
#Translate TF to 01
fix.tf <- function(incorrect.tf) {
real.tf <- ifelse(incorrect.tf == "True" | incorrect.tf == "TRUE", 1, 0)
return(real.tf)
}
codes <- names(PSBatch1)[grepl("Code..",names(PSBatch1))]
for (i in 1:length(codes)) {
PSBatch1[,codes[[i]]] <- fix.tf(PSBatch1[,codes[[i]]])
}
#####################################
#Tag successes within success ranges
#####################################
#Create Index and upper/lower bound vars
x <- PSBatch1 %>% separate(Excerpt.Range, c("Lower", "Upper"), sep = "-")
x$UpperN <- as.numeric(x$Upper)
x$LowerN <- as.numeric(x$Lower)
#Create Index and upper/lower bound vars
x <- PSBatch1 %>% separate(Excerpt.Range, c("Lower", "Upper"), sep = "-")
x$UpperN <- as.numeric(x$Upper)
x$LowerN <- as.numeric(x$Lower)
x$Codes_Combined = x$Combined_Codes
#Loop over every Index to find Success
unique_indices <- unique(x$Media.Title)
for (index in length(unique_indices)) {
current_respondent <- x[x$Media.Title == unique_indices[index],]
for (i in nrow(current_respondent)) {
#current_respondent[i, grepl("Success", PSBatch1$Codes_Combined)] #How do I get it to stop at Success?
#Within Success, Loop over to test if ranges fit
for (j in length(x)) {
subset <- (current_respondent[i, 'UpperN'] >= current_respondent[j, 'UpperN']) & (current_respondent[i, 'LowerN'] <= current_respondent[j, 'LowerN'])
if (subset == TRUE){
current_respondent[j, 'Codes_Combined'] <- paste(current_respondent[j, 'Codes_Combined'],current_respondent[i, 'Codes_Combined'])
}
}
}
x[x$Media.Title == unique_indices[index],] <- current_respondent
}
subset
current_respondent[i, 'UpperN']
View(current_respondent)
i
index
current_respondent <- x[x$Media.Title == unique_indices[index],]
unique_indices[160]
index
View(x)
x$Codes_Combined
?sample
a <- sample(c(1198,1200,1202,1203,1199,1198,1195,1193), 10000, replace=TRUE)
mean(sample > 1200)
a
mean(sample > 1200)
dim(sample)
shape(a)
dim(a)
length(a)
a <- as.numeric(a)
a
mean(sample > 1200)
mean(a > 1200)
mean(a < 1200)
mean(a <= 1200)
a = rbeta(10000, 3, 5)
plot(density(a))
a = rbeta(10000, 3, 7)
plot(density(a))
b = 2 * a
plot(density(b))
max(b)
min(b)
ab = rbinom(10000, 1, 0.65)
ab
a
b = ab
c = ((a - b)**2)/10000
c
plot(density(c))
max(c)
min(c)
a
max(a)
min(a)
max(b)
min(b)
median(c)
b = rbinom(10000, 1, 0.5)
c = sum(((a - b)**2))/10000
c
a = seq(0,1,100)
b = (a - 1)**2
b
a
?seq
a = seq(0,1,length.out=100)
a
b = (a - 1)**2
b
plot(a, b)
plot(a, b, type="l")
a <- runif(10000,34,46)
b <- runif(10000,38,50)
c = b - a
mean(c > 0)
plot(density(c))
g <- runif(10000,38,50)
c <- runif(10000,36,48)
d = g - c
mean(d > 0)
a = rnorm(10000,-6,3)
b = rnorm(10000,6,3)
c = c(a,b)
c
plot(density(c))
a = 44
x = c + a
plot(density(x))
y = 42 + a
z = x - y
plot(density(z))
y = 42 + c
z = x - y
plot(density(z))
z
c
plot(density(c))
x = 42 + c
plot(density(c))
plot(density(x))
y = 44 + c
plot(density(y))
z = y - x
plot(density(z))
mean(z)
mean(z > 0)
a = rnorm(10000,44,6)
b = rnorm(10000,42,6)
c = b - a
plot(density(c))
mean(c > 0)
mean b > 0
mean(c < 0)
a = (51 + 54 + 48)/3
b = (40 + 36 + 31)/3
a
b
c = rnorm(10000,51,6) - rnorm(10000,36,6)
mean(c > 0)
c = rnorm(10000,47.8,6) - rnorm(10000,42.8,6)
mean(c > 0)
montana <- rnorm(10000, 46, 3) - rnorm(10000, 42, 3)
plot(density(montana))
mean(montana > 0)
montana <- rnorm(10000, 46, 6) - rnorm(10000, 42, 6)
plot(density(montana))
mean(montana > 0)
a = rnorm(10000,44,6)
b = rnorm(10000,42,6)
c = b - a
mean(c > 0)
mean(rnorm(10000,48,5)-rnorm(10000,45.8,5) > 0)
mean(rnorm(10000,48.9,6)-rnorm(10000,42.7,6) > 0)
mean(rnorm(10000,49.8,6)-rnorm(10000,42.8,6) > 0)
mean(rnorm(10000,49.9,6)-rnorm(10000,42.1,6) > 0)
library(mc2d)
?rpert
m = ((8*0.257)-1)/3
m
a <- rpert(10000, 0, m, 2)
plot(density(a))
median(a)
((8*0.257)-2)/6
((8*0.257)-2)/6
a <- rpert(10000, 0, 0.01, 2)
median(a)
a <- rpert(10000, 0, 0.0093, 2)
median(a)
mean(a <= 0.188)
a <- rpert(10000, 0, 0.0093, 2, 8)
median(a)
plot(density(a))
a <- rpert(10000, 0, 0.0093, 2)
median(a)
quantile(a, c(0.02))
c = rbeta(10000, 2,5)
median(c)
c = rbeta(10000, 1,5)
median(c)
d = c*2
max(d)
min(d)
median(d)
mean(d < 0.18)
mean(c < 0.18)
https://benjaminreinhardt.com/wddw
SEED <- 1234
set.seed(SEED)
eta <- c(1, -0.2)
gamma <- c(1.8, 0.4)
N <- 200
x <- rnorm(N, 2, 2)
z <- rnorm(N, 0, 2)
mu <- binomial(link = logit)$linkinv(eta[1] + eta[2]*x)
phi <- binomial(link = log)$linkinv(gamma[1] + gamma[2]*z)
y <- rbeta(N, mu * phi, (1 - mu) * phi)
dat <- data.frame(cbind(y, x, z))
dat
plot(density(y))
max(y)
View(dat)
a = rnorm(1000,5,7)
b = rnorm(100, 7 2)
b = rnorm(100, 7, 2)
cov(a,b)
setwd('/Users/mattlerner/roi/sbir-roi/testing/testing-data')
addresses <- read.delim("FMCSA_CENSUS1_2020Aug/FMCSA_CENSUS1_2020Aug.txt")
addresses <- read.delim("FMCSA_CENSUS1_2020Aug/FMCSA_CENSUS1_2020Aug.txt")
View(addresses)
addresses <- read.csv("FMCSA_CENSUS1_2020Aug/FMCSA_CENSUS1_2020Aug.txt")
address.file <- read.csv("Home_Health_Care_Agencies.csv")
View(address.file)
frames_$address <- sample(address.file$Address, nrow(frames_), replace = FALSE)
####### Summ
setwd('/Users/mattlerner/roi/sbir-roi/testing/testing-data')
races = c("Martian", "Venusian", "Earthling", "Neptunian")
gender = c("Wan", "Moman")
programs = c("Electrical Engineering", "Art History", "Underwater Basket-Weaving")
education.levels = c(0, 60, 73, 81, 92, 111, 123, 124, 125)
combos <- expand.grid(race=races, gender=gender, program=programs, education.level=education.levels)
frames_ <- data.frame()
for (i in 1:nrow(combos)) {
number.in.group <- abs(round(rnorm(1, 20, 8)))
sd <- abs(rnorm(1,0,5000))
mean <- abs(rnorm(1,35000,5000))
real_premium <- abs(rnorm(1,10000,2000))
earnings_start <- round(rnorm(number.in.group, mean, sd),0)
earnings_end <- round(rnorm(number.in.group, mean+real_premium, sd),0)
ages <- round(rnorm(number.in.group, 34, 15), 0)
program_start <- round(rnorm(number.in.group, 2014,2),0)
program_end <- round(program_start + abs(rnorm(number.in.group, 2, 2)),0)
ages[ages < 18] <- 18
frame_ <- cbind(race = as.character(rep(combos[i, 'race'],number.in.group)), gender = as.character(rep(combos[i, 'gender'],number.in.group)), earnings_start = earnings_start, earnings_end = earnings_end, age = ages, program=as.character(rep(combos[i, 'program'],number.in.group)), program_start=program_start, program_end=program_end, education_level=combos[i, 'education.level'])
frames_ <- rbind(frames_, frame_)
}
frames_$state = "08"
# Get addresses
# addresses are sourced from https://catalog.data.gov/dataset/home-health-care-agencies
address.file <- read.csv("Home_Health_Care_Agencies.csv")
frames_$address <- sample(address.file$Address, nrow(frames_), replace = FALSE)
View(frames_)
View(address.file)
address.file$full.address <- paste(address.file$Address,address.file$City, address.file$State, address.file$Zip)
address.file$full.address
frames_$address <- sample(address.file$full.address, nrow(frames_), replace = FALSE)
View(address.file)
frames_$id <- sample(1:nrow(frames_))
View(addresses)
View(frames_)
write.csv(frames_,"test_microdata.csv")
